---
kind: pipeline
type: docker
name: build

workspace:
  base: /go
  path: src/p83.nl/go/ekster

steps:
  - name: testing
    image: golang:1.18-alpine
    environment:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    commands:
      - go version
      - apk --no-cache add git
      - go get -d -t ./...
      - go install honnef.co/go/tools/cmd/staticcheck@latest
      - go build p83.nl/go/ekster/cmd/eksterd
      - go vet ./...
      - go test -v ./...
      - staticcheck ./...

  - name: publish-personal
    image: plugins/docker
    depends_on:
      - testing
    settings:
      repo: registry.stuifzandapp.com/microsub-server
      registry: registry.stuifzandapp.com
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - promote
      target:
        - production

  # - name: publish-docker
  #   image: plugins/docker
  #   depends_on:
  #     - testing
  #   settings:
  #     repo: pstuifzand/ekster
  #     tags:
  #       - alpine
  #     username:
  #       from_secret: docker_official_username
  #     password:
  #       from_secret: docker_official_password

  - name: deploy
    image: appleboy/drone-ssh
    depends_on:
      - publish-personal
    settings:
      host: microsub.stuifzandapp.com
      username: microsub
      ssh_key:
        from_secret: ssh_key
      script:
        - cd /home/microsub/microsub
        - docker-compose pull web
        - docker-compose up -d
    when:
      event:
        - promote
      target:
        - production
